#!/bin/bash
#PBS -l nodes=1:ppn=8,walltime=4:00:00
#PBS -l vmem=30gb
#PBS -N pynet

# This file is used to execute PyNets on brainlife.
# brainlife stages this git repo, writes `config.json` and execute this script.
# this script reads the `config.json` and execute pynets container through singularity

# you can run this script(main) without any parameter to test how this App will run outside brainlife
# you will need to copy config.json.brainlife-sample to config.json before running `main` as `main`
# will read all parameters from config.json

set -x
set -e

mkdir -p output tmp

echo "running pynet"
#singularity run -e docker://dpys/pynets:latest pynets output \
#    -p $(jq .p config.json) \
#    -mod 'partcorr' 'corr' \
#    -min_thr $(jq .min_thr config.json) \
#    -max_thr $(jq .max_thr config.json) \
#    -step_thr $(jq .step_thr config.json) \
#    -sm 0 2 4 \
#    -hp 0 0.028 0.080 \
#    -ct ward \
#    -k 100 200 \
#    -norm 6 \
#    -anat $(jq .t1 config.json) \
#    -func $(jq .bold config.json) \
#    -conf $(jq .regressors config.json) \
#    -id brainlife \
#    -work 'tmp' -pm '8,30'

#mkdir -p output
#singularity run -e docker://dpys/pynets:latest pynets -id brainlife \
#    -func `pwd`/$(jq -r .bold config.json) \
#    -anat `pwd`/$(jq -r .t1 config.json) \
#    -a coords_dosenbach_2010 \
#    -mod partcorr \
#    -spheres \
#    -thr 0.20 \
#    -work 'tmp' -pm '8,30' \
#    `pwd`/output

#works
#singularity run -e docker://dpys/pynets:latest pynets \
#    `pwd`/output \
#    -id brainlife \
#    -work `pwd`/tmp \
#    -func `pwd`/$(jq -r .bold config.json) \
#    -anat `pwd`/$(jq -r .t1 config.json) \
#    -a 'BrainnetomeAtlasFan2016' \
#    -mod partcorr -thr 0.20 \
#    -pm 8,30

singularity run -e docker://dpys/pynets:latest pynets \
    `pwd`/output \
    -id brainlife \
    -p $(jq .p config.json) \
    -func `pwd`/$(jq -r .bold config.json) \
    -anat `pwd`/$(jq -r .t1 config.json) \
    -work `pwd`/tmp \
    -a 'BrainnetomeAtlasFan2016' 'destrieux2009_rois' \
    -mod partcorr csd \
    -min_thr $(jq -r .min_thr config.json) \
    -max_thr $(jq -r .max_thr config.json) \
    -step_thr $(jq -r .step_thr config.json) \
    -plt \
    -n Vis \
    -dwi `pwd`/$(jq -r .dwi config.json) \
    -bval `pwd`/$(jq -r .bvals config.json) \
    -bvec `pwd`/$(jq -r .bvecs config.json) \
    -mplx 2 \
    -pm 8,30

#-cm `pwd`/outputs/triple_net_ICA_overlap_3_sig_bin.nii.gz \
#-m $(jq .mask config.json) \
